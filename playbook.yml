---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  handlers:
    - name: Restart SSH
      service:
        name: ssh
        state: restarted

  tasks:
    - name: Install Prerequisites
      apt: name=aptitude update_cache=yes state=latest force_apt_get=yes

# Install and ugrade packages
    - name: Update apt packages
      apt:
        update_cache: yes
        cache_valid_time: 86400 # One day
        upgrade: yes

    - name: Install required system packages
      apt: name={{ sys_packages }} state=latest

# Sudo Group Setup
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

# User + Key Setup
    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ create_user }}"
        state: present
        groups: wheel
        append: true
        create_home: true
        shell: /bin/bash

    - name: Set authorized key for remote user
      authorized_key:
        user: "{{ create_user }}"
        state: present
        key: "{{ copy_local_key }}"

# SSH server settings
    - name: Reconfigure OpenSSH with enhanced security settings
      copy:
        src: sshd_config
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: 0644
      notify: Restart SSH

# UFW Setup
    - name: UFW - Allow SSH connections
      ufw:
        rule: allow
        name: OpenSSH

    - name: UFW - Allow MOSH connections
      ufw:
        rule: allow
        name: mosh

    - name: UFW - Deny all other incoming traffic by default
      ufw:
        state: enabled
        policy: deny
        direction: incoming

# unattended-upgrades setup
    - name: Generate the unattended-upgrades templates to enable automatic security updates
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: 0644
      with_items:
        - { src: "20auto-upgrades.j2",       dest: "/etc/apt/apt.conf.d/20auto-upgrades" }
        - { src: "50unattended-upgrades.j2", dest: "/etc/apt/apt.conf.d/50unattended-upgrades" }

# TMUX
    - name: Copy over .tmux.conf
      template:
        src: "tmux.conf.j2"
        dest: "/home/{{ create_user }}/.tmux.conf"
        mode: "644"
        owner: "{{ create_user }}"
        group: "{{ create_user }}"
